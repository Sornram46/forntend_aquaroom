import { NextRequest, NextResponse } from 'next/server';

// ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö
const TEST_COUPONS = [
  {
    code: 'WELCOME10',
    name: '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà',
    discount_type: 'percentage',
    discount_value: 10,
    min_order_amount: 500,
    max_discount_amount: 1000,
    is_active: true,
    start_date: new Date('2024-01-01'),
    end_date: new Date('2025-12-31')
  },
  {
    code: 'AQUA100',
    name: '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 100 ‡∏ö‡∏≤‡∏ó',
    discount_type: 'fixed_amount',
    discount_value: 100,
    min_order_amount: 800,
    max_discount_amount: null,
    is_active: true,
    start_date: new Date('2024-01-01'),
    end_date: new Date('2025-12-31')
  },
  {
    code: 'SAVE50',
    name: '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 50 ‡∏ö‡∏≤‡∏ó',
    discount_type: 'fixed_amount',
    discount_value: 50,
    min_order_amount: 300,
    max_discount_amount: null,
    is_active: true,
    start_date: new Date('2024-01-01'),
    end_date: new Date('2025-12-31')
  }
];

export async function POST(request: NextRequest) {
  try {
    console.log('üé´ Coupon validation API called');
    
    const body = await request.json();
    const { code, order_total, items, email } = body;

    console.log('üé´ Request data:', { code, order_total });

    if (!code) {
      return NextResponse.json({
        success: false,
        error: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á'
      }, { status: 400 });
    }

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
    const coupon = TEST_COUPONS.find(c => 
      c.code.toLowerCase() === code.toLowerCase() && c.is_active
    );

    console.log('üé´ Found coupon:', coupon?.code);

    if (!coupon) {
      return NextResponse.json({
        success: false,
        error: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
      }, { status: 404 });
    }

    const now = new Date();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    if (now < coupon.start_date) {
      return NextResponse.json({
        success: false,
        error: '‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
      }, { status: 400 });
    }

    if (now > coupon.end_date) {
      return NextResponse.json({
        success: false,
        error: '‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß'
      }, { status: 400 });
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥
    if (coupon.min_order_amount && Number(order_total) < coupon.min_order_amount) {
      return NextResponse.json({
        success: false,
        error: `‡∏¢‡∏≠‡∏î‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ ${coupon.min_order_amount.toLocaleString('th-TH')} ‡∏ö‡∏≤‡∏ó (‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ${Number(order_total).toLocaleString('th-TH')} ‡∏ö‡∏≤‡∏ó)`
      }, { status: 400 });
    }

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
    let discount = 0;
    if (coupon.discount_type === 'percentage') {
      discount = Math.round((Number(order_total) * coupon.discount_value) / 100);
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
      if (coupon.max_discount_amount && discount > coupon.max_discount_amount) {
        discount = coupon.max_discount_amount;
      }
    } else {
      discount = coupon.discount_value;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏¢‡∏≠‡∏î‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
    if (discount > Number(order_total)) {
      discount = Number(order_total);
    }

    console.log('üé´ Calculated discount:', discount);

    return NextResponse.json({
      success: true,
      data: {
        coupon_id: coupon.code,
        code: coupon.code,
        name: coupon.name,
        discount_type: coupon.discount_type,
        discount_value: coupon.discount_value,
        discount_amount: discount,
        message: `‡πÉ‡∏ä‡πâ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á "${coupon.name}" ‡πÑ‡∏î‡πâ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î ${discount.toLocaleString('th-TH')} ‡∏ö‡∏≤‡∏ó`
      }
    });

  } catch (error) {
    console.error('‚ùå Error validating coupon:', error);
    return NextResponse.json({
      success: false,
      error: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡πÑ‡∏î‡πâ: ' + (error instanceof Error ? error.message : 'Unknown error')
    }, { status: 500 });
  }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° GET method ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
export async function GET() {
  return NextResponse.json({
    success: true,
    message: 'Coupon validation API is working',
    available_coupons: TEST_COUPONS.map(c => ({
      code: c.code,
      name: c.name,
      discount_type: c.discount_type,
      discount_value: c.discount_value,
      min_order_amount: c.min_order_amount
    }))
  });
}